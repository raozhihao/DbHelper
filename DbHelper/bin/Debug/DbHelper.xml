<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DbHelper</name>
    </assembly>
    <members>
        <member name="T:DbHelper.ConnectionStrBuilder.BaseConStrBuilder">
            <summary>
            提供数据库连接字符串对象的基类型
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.BaseConStrBuilder.Host">
            <summary>
            数据库IP地址
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.BaseConStrBuilder.Port">
            <summary>
            数据库端口号
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.BaseConStrBuilder.Uid">
            <summary>
            数据库用户名
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.BaseConStrBuilder.Pwd">
            <summary>
            数据库密码
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.BaseConStrBuilder.DataBase">
            <summary>
            连接的数据库名称
            </summary>
        </member>
        <member name="T:DbHelper.ConnectionStrBuilder.OracleConStrBuilder">
            <summary>
            Oracle的数据库连接字符串对象
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.OracleConStrBuilder.Sid">
            <summary>
            SID
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.OracleConStrBuilder.Port">
            <summary>
            数据库端口号
            </summary>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.OracleConStrBuilder.#ctor">
            <summary>
            构造函数 
            </summary>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.OracleConStrBuilder.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构建数据库连接字符串对象
            </summary>
            <param name="host">数据库IP地址</param>
            <param name="port">数据库端口号</param>
            <param name="userId">数据库用户名</param>
            <param name="password">数据库密码</param>
            <param name="sid">SID</param>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.OracleConStrBuilder.ToString">
            <summary>
            返回对象的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:DbHelper.ConnectionStrBuilder.PostgreSqlConStrBuilder">
            <summary>
            PostgreSq的数据库连接字符串对象
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.PostgreSqlConStrBuilder.DataBase">
            <summary>
            连接的数据库名称
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.PostgreSqlConStrBuilder.Port">
            <summary>
            数据库端口号
            </summary>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.PostgreSqlConStrBuilder.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构建数据库连接字符串对象
            </summary>
            <param name="host">数据库IP地址</param>
            <param name="port">数据库端口号</param>
            <param name="userId">数据库用户名</param>
            <param name="password">数据库密码</param>
            <param name="dataBase">连接的数据库名称</param>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.PostgreSqlConStrBuilder.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.PostgreSqlConStrBuilder.ToString">
            <summary>
            返回对象的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:DbHelper.ConnectionStrBuilder.SqlServerConStrBuilder">
            <summary>
            SqlServer的数据库连接字符串对象
            </summary>
        </member>
        <member name="F:DbHelper.ConnectionStrBuilder.SqlServerConStrBuilder.UseLocal">
            <summary>
            是否使用本地模式
            </summary>
        </member>
        <member name="P:DbHelper.ConnectionStrBuilder.SqlServerConStrBuilder.DataBase">
            <summary>
            连接的数据库名称
            </summary>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.SqlServerConStrBuilder.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            构建数据库连接字符串对象
            </summary>
            <param name="host">数据库IP地址</param>
            <param name="userId">数据库用户名</param>
            <param name="password">数据库密码</param>
            <param name="dataBase">连接的数据库名称</param>
            <param name="useLocal">是否使用本地模式</param>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.SqlServerConStrBuilder.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:DbHelper.ConnectionStrBuilder.SqlServerConStrBuilder.ToString">
            <summary>
            返回对应的字符串类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:DbHelper.DataPropertyAttribute">
            <summary>
            原始数据库中的字段名称,当自定义类的名称不与数据库相同时使用
            </summary>
        </member>
        <member name="P:DbHelper.DataPropertyAttribute.DataName">
            <summary>
            数据库原始字段名称
            </summary>
        </member>
        <member name="M:DbHelper.DataPropertyAttribute.#ctor(System.String)">
            <summary>
            确定自定义类属性映射到数据库字段上的名称
            </summary>
            <param name="dataName">对应数据库字段上的名称</param>
        </member>
        <member name="T:DbHelper.DbContext">
            <summary>
            提供对数据库访问的上下文类
            </summary>
        </member>
        <member name="F:DbHelper.DbContext.parameters">
            <summary>
            存储参数
            </summary>
        </member>
        <member name="F:DbHelper.DbContext.DbProvider">
            <summary>
            数据源适配对象
            </summary>
        </member>
        <member name="F:DbHelper.DbContext.connection">
            <summary>
            数据库连接对象
            </summary>
        </member>
        <member name="F:DbHelper.DbContext.command">
            <summary>
            数据库命令对象
            </summary>
        </member>
        <member name="F:DbHelper.DbContext.transCommand">
            <summary>
            事务命令对象
            </summary>
        </member>
        <member name="P:DbHelper.DbContext.ConnectionStr">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:DbHelper.DbContext.ErroMsg">
            <summary>
            返回最后一次获取到的错误信息
            </summary>
        </member>
        <member name="M:DbHelper.DbContext.#ctor(System.String,DbHelper.DataBaseType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connectionStr">连接字符串</param>
            <param name="dbType">数据库类型,默认使用app.config中的设置</param>
            <param name="selectName">在配置文件中所选择的connectionStrings节点下的name</param>
        </member>
        <member name="M:DbHelper.DbContext.#ctor(System.Data.Common.DbConnectionStringBuilder,DbHelper.DataBaseType,System.String)">
            <summary>
            构造器
            </summary>
            <param name="conStrBuilder">连接字符串对象</param>
            <param name="dbType">对应数据库类型</param>
            <param name="selectName">配置文件对应数据库名称</param>
        </member>
        <member name="M:DbHelper.DbContext.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:DbHelper.DbContext.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="selectName">在配置文件中所选择的connectionStrings节点下的name</param>
        </member>
        <member name="M:DbHelper.DbContext.ChangeConnectionStr(System.Data.Common.DbConnectionStringBuilder)">
            <summary>
            更改连接字符串
            </summary>
            <param name="stringBuilder"></param>
        </member>
        <member name="M:DbHelper.DbContext.ChangeConnectionStr(System.String)">
            <summary>
            更改连接字符串
            </summary>
            <param name="newConnectionStr"></param>
        </member>
        <member name="M:DbHelper.DbContext.AddParameter(System.Data.Common.DbParameter)">
            <summary>
            添加参数
            </summary>
            <param name="parameter">参数对象</param>
        </member>
        <member name="M:DbHelper.DbContext.AddParameter(DbHelper.ParameterHelper)">
            <summary>
            提供最简单的参数化添加
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:DbHelper.DbContext.AddParameters(System.Data.Common.DbParameter[])">
            <summary>
            添加参数集合
            </summary>
            <param name="parameters">参数对象集合</param>
        </member>
        <member name="M:DbHelper.DbContext.ExecuteNonQuery(System.String,System.Data.CommandType)">
            <summary>
            增加,删除,更新
            </summary>
            <param name="query">sql语句</param>
            <param name="commandType">指定如何解释命令字符串</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.ExcuteSacler(System.String,System.Data.CommandType)">
            <summary>
            获取单个的值
            </summary>
            <param name="query">sql语句</param>
            <param name="commandType">指定如何解释命令字符串</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.ExcuteProcedure(System.String)">
            <summary>
            调用有无返回值的存储过程
            </summary>
            <param name="proName">存储过程或函数名</param>
        </member>
        <member name="M:DbHelper.DbContext.ExcuteProcedure(System.String,System.Data.CommandType)">
            <summary>
            调用存储过程
            </summary>
            <param name="proName">存储过程或函数名</param>
            <param name="commandType">指定如何解释命令字符串</param>
            <returns>返回调用之后的返回值</returns>
        </member>
        <member name="M:DbHelper.DbContext.GetDataTable(System.String,System.Data.DataTable@,System.String)">
            <summary>
            获取DataTable
            </summary>
            <param name="query">sql查询语句</param>
            <param name="dt">返回的数据集</param>
            <param name="tableName">为数据集命名</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.UpdateTable(System.String,System.Data.DataTable)">
            <summary>
            更新表格
            </summary>
            <param name="query">sql语句</param>
            <param name="dt">需要更新的表</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.UpdateTable(System.String,System.Data.DataTable,System.Boolean,System.Data.ConflictOption)">
            <summary>
            更新表格
            </summary>
            <param name="query">sql语句</param>
            <param name="dt">需要更新的表</param>
            <param name="setAllValues">指定 update 语句中是包含所有列值还是仅包含更改的列值。</param>
            <param name="conflictOption">指定将如何检测和解决对数据源的相互冲突的更改。</param>
            <returns>对表进行更新操作</returns>
        </member>
        <member name="M:DbHelper.DbContext.GetList``1(System.String,System.Collections.Generic.List{``0}@)">
            <summary>
            获取指定对象集合
            </summary>
            <typeparam name="T">需要获取的对象</typeparam>
            <param name="sql">sql语句</param>
            <param name="values">返回的强类型集合</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.ToList``1(System.Data.DataTable)">
            <summary>
            根据DataTable创建一个强类型对象集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt"></param>
            <returns>如果失败,将返回null</returns>
        </member>
        <member name="M:DbHelper.DbContext.GetObjects(System.String)">
            <summary>
            获取对象集合
            </summary>
            <param name="sql">查询语句</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.ToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将集合对象转为DataTable
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="collection">对象集合</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.TransactionAdd(System.String,System.Data.CommandType)">
            <summary>
            增加一个事务处理
            </summary>
            <param name="sql">sql处理语句</param>
            <param name="commandType">指定如何解释命令字符串</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.TransctionCommit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:DbHelper.DbContext.TransctionRollBack">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:DbHelper.DbContext.SetCommand(System.String,System.Data.CommandType)">
            <summary>
            设置Command对象的一些值
            </summary>
            <param name="query"></param>
            <param name="text"></param>
        </member>
        <member name="M:DbHelper.DbContext.RegisterDb(System.String)">
            <summary>
            注册数据库对象
            </summary>
            <param name="selectName"></param>
        </member>
        <member name="M:DbHelper.DbContext.SetTransCommand(System.String,System.Data.CommandType)">
            <summary>
            设置事务属性
            </summary>
            <param name="sql"></param>
            <param name="commandType"></param>
        </member>
        <member name="M:DbHelper.DbContext.GetObjectInfo``1(System.Data.DataTable,System.Int32)">
            <summary>
            获取单个对象
            </summary>
            <typeparam name="T">需要获取的对象</typeparam>
            <param name="dt">对象的表</param>
            <param name="index">当前需要获取的表中的行索引</param>
            <returns></returns>
        </member>
        <member name="M:DbHelper.DbContext.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:DbHelper.DbContext.Dispose">
            <summary>
            释放对应资源
            </summary>
        </member>
        <member name="T:DbHelper.docClass.Helperdoc">
            <summary>
            帮助文档
            </summary>
        </member>
        <member name="M:DbHelper.docClass.Helperdoc.GetStart">
            <summary>
            开始
            </summary>
            <returns></returns>
        </member>
        <member name="T:DbHelper.DataBaseType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:DbHelper.DataBaseType.None">
            <summary>
            不使用任何内置配置,直接使用配置文件项
            </summary>
        </member>
        <member name="F:DbHelper.DataBaseType.SqlServer">
            <summary>
            使用内置的SqlServer
            </summary>
        </member>
        <member name="F:DbHelper.DataBaseType.Oracle">
            <summary>
            使用内置的Oracle
            程序集 Oracle.DataAccess, Version=4.112.1.2, Culture=neutral, PublicKeyToken=89b483f429c47342
            </summary>
        </member>
        <member name="F:DbHelper.DataBaseType.PostgreSql">
            <summary>
            使用内置的PostgreSql
            程序集 Npgsql, Version=4.0.5.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7
            </summary>
        </member>
        <member name="T:DbHelper.ParameterHelper">
            <summary>
            参数化帮助类,提供最简单的参数化帮助
            </summary>
        </member>
        <member name="M:DbHelper.ParameterHelper.GetDbParameter">
            <summary>
            获取确切类型的DbParameter
            </summary>
            <returns></returns>
        </member>
        <member name="M:DbHelper.ParameterHelper.#ctor(System.String,System.Object)">
            <summary>
            构造器
            </summary>
            <param name="name">要映射的参数的名称。</param>
            <param name="value">设置参数的值。</param>
        </member>
        <member name="M:DbHelper.ParameterHelper.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.DbType">
            <summary>
            获取或设置参数的 System.Data.SqlDbType。
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.Direction">
            <summary>
            获取或设置一个值，该值指示参数是只可输入的参数、只可输出的参数、双向参数还是存储过程返回值参数。
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.ParameterName">
            <summary>
            要映射的参数的名称。
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.Size">
            <summary>
            获取或设置列中的数据的最大大小（以字节为单位）
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.SourceColumn">
            <summary>
            获取或设置映射到 System.Data.DataSet 并且用于加载或返回 System.Data.SqlClient.SqlParameter.Value的源列的名称
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.SourceColumnNullMapping">
            <summary>
            设置或获取一个值，该值指示源列是否可以为 null。 通过此操作，System.Data.SqlClient.SqlCommandBuilder 能够为可以为
                null 的列正确地生成 Update 语句。
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.SourceVersion">
            <summary>
            获取或设置要在加载 System.Data.DataRowVersion 时使用的 System.Data.SqlClient.SqlParameter.Value。
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.Value">
            <summary>
            获取或设置参数的值。
            </summary>
        </member>
        <member name="P:DbHelper.ParameterHelper.IsNullable">
            <summary>
            
            </summary>
        </member>
        <member name="M:DbHelper.ParameterHelper.ResetDbType">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
